<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RKon.Alexa.NET</name>
    </assembly>
    <members>
        <member name="T:RKon.Alexa.NET.Request.RequestAppliance">
            <summary>
            Gerät aus einem Request
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Request.RequestAppliance.ApplianceId">
            <summary>
            GeräteId
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Request.RequestAppliance.AdditionalApplianceDetails">
            <summary>
            Zusätzliche Appliance Informationen
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Request.RequestAppliance.#ctor">
            <summary>
            Konstruktor. Initialisiert AdditionalApplianceDetails
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Request.RequestHeader">
            <summary>
            Header für ein SmartHomeRequest
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Request.RequestHeader.MessageId">
            <summary>
            Nachrichtennummer
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Request.RequestHeader.PayloadVersion">
            <summary>
            PayloadVersion
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Request.RequestHeader.Namespace">
            <summary>
            Namespace
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Request.RequestHeader.Name">
            <summary>
            Aktionsname
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Request.SmartHomeRequest">
            <summary>
            SmartHomeRequest Objekt an Hand von JSON Requests 
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Request.SmartHomeRequest.Header">
            <summary>
            Headerinformationen
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Request.SmartHomeRequest.Payload">
            <summary>
            Payloadinformationen
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Request.SmartHomeRequest.GetRequestPayloadType">
            <summary>
            Gibt den Typ des Payloads zurück
            </summary>
            <returns></returns>
        </member>
        <member name="T:RKon.Alexa.NET.Request.DiscoveryRequestPayload">
            <summary>
            Payload für einen DiscoverApplianceRequest
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Request.DiscoveryRequestPayload.AccessToken">
            <summary>
            Access Token, der der Kunden Geräte Cloud zugewiesen ist.
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Request.RequestPayloads.HealthCheckRequestPayload">
            <summary>
            Payload für einen HealthCheckRequest
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Request.RequestPayloads.HealthCheckRequestPayload.InitiationTimestamp">
            <summary>
            Zeitstempel in Millisekunden seit dem 1.01.1970
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Request.RequestPayloads.IncrementDecrementPercentageRequestPayload">
            <summary>
            Payload für einen DecrementPercentage- oder IncrementPercentageRequest
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Request.RequestPayloads.IncrementDecrementPercentageRequestPayload.DeltaPercentage">
            <summary>
            Menge um wie viel der Prozentwert des Geräts angepasst werden soll
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Request.RequestPayloads.IncrementDecrementRequestPayload">
            <summary>
            Payload für einen DecrementTemperature- oder IncrementTemperatureRequest
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Request.RequestPayloads.IncrementDecrementRequestPayload.DeltaTemperature">
            <summary>
            Menge um wie viel die Temperatur angepasst werden soll
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Request.RequestPayloads.SetPercentageRequestPayload">
            <summary>
             Payload für einen SetPercentageRequests
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Request.RequestPayloads.SetPercentageRequestPayload.PercentageState">
            <summary>
            Prozentwert um den das Gerät angepasst werden soll
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Request.RequestPayloads.SmartHomeRequestConverter">
            <summary>
            JsonConverter zur Auswertung von SmartHomeRequests
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Request.RequestPayloads.SmartHomeRequestConverter.CanWrite">
            <summary>
            
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Request.RequestPayloads.SmartHomeRequestConverter.CanConvert(System.Type)">
            <summary>
            Liefert zurück, ob in das übergebene Objekt konvertiert werden kann.
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:RKon.Alexa.NET.Request.RequestPayloads.SmartHomeRequestConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Nicht implementiert
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:RKon.Alexa.NET.Request.RequestPayloads.SmartHomeRequestConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Liest Json in ein Objekt und erstellt an Hand des Header Namens ein passendes SmartHomeRequest
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:RKon.Alexa.NET.Request.RequestPayloads.SmartHomeRequestConverter.Create(System.String,System.String)">
            <summary>
            Liefert den Payload für den jeweiligen Requesttyp
            </summary>
            <param name="requestType">Name des Requests></param>
            <param name="payloadVersion">Version des Payloads</param>
            <returns></returns>
        </member>
        <member name="T:RKon.Alexa.NET.Request.RequestPayloads.SetTemperatureRequestPayload">
            <summary>
            Payload für ein SetTargetTemperatureRequest
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Request.RequestPayloads.SetTemperatureRequestPayload.TargetTemperature">
            <summary>
            Zieltemperatur in Grad Celsius.
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Request.RequestPayload">
            <summary>
            Abstrakte Basis Klasse für RequestPayloads
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Request.TurnOnOffRequestPayload">
            <summary>
            Payload für TurnOn und TurnOfRequests
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Request.TurnOnOffRequestPayload.Appliance">
            <summary>
            Das Gerät für das die Aktion bestimmt ist
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ISmartHomeResponse">
            <summary>
            Interface zur Definition einer SmartHome Response
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ISmartHomeResponse.Header">
            <summary>
            Header
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ISmartHomeResponse.Payload">
            <summary>
            Payload
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ISmartHomeResponse.GetResponsePayloadType">
            <summary>
            Rückgabe des Payload Typs
            </summary>
            <returns>System.Type des Payloads</returns>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ResponseAppliance">
            <summary>
            Gerät, das per Response geschickt wird
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ResponseAppliance.ApplianceID">
            <summary>
            GeräteID
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ResponseAppliance.ManufacturerName">
            <summary>
            Hersteller
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ResponseAppliance.ModelName">
            <summary>
            Modell
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ResponseAppliance.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ResponseAppliance.FriendlyName">
            <summary>
            Name des Geräts, der vom Nutzer verwendet wird um das Gerät zu identifizieren
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ResponseAppliance.FriendlyDescription">
            <summary>
            Beschreibung in 128 Zeichen
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ResponseAppliance.IsReachable">
            <summary>
            Gibt an, ob das Gerät erreichbar ist
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ResponseAppliance.Actions">
            <summary>
            Aktionen, die durchgeführt werden können
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ResponseAppliance.AdditionalApplianceDetails">
            <summary>
            Zusätzliche Details
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ResponseAppliance.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Erstellt Gerät an Hand der übergebenen Werte. Aktionen müssen manuell gesetzt werden.
            </summary>
            <param name="id">GeräteId</param>
            <param name="manufacturerName">Hersteller</param>
            <param name="modelName">Modell</param>
            <param name="version">Version</param>
            <param name="friendlyName">Name des Geräts, der vom Nutzer verwendet wird um das Gerät zu identifizieren</param>
            <param name="friendlyDescription">Beschreibung in 128 Zeichen</param>
            <param name="isReachable">Gibt an, ob das Gerät erreichbar ist</param>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ResponseAppliance.TryAddAction(System.String)">
            <summary>
            Versucht einen Action hinzuzufügen. Gültige Actions finden Sie im Namespace RKon.Alexa.NET.Types.ApplianceActions
            </summary>
            <param name="action">Action die hinzugefügt werden soll</param>
            <returns>True, wenn Wert hinzugefügt wurde</returns>
        </member>
        <member name="T:RKon.Alexa.NET.Response.UnknownRequestHeaderException">
            <summary>
            Exception, wenn der RequestHeader Name nicht bekannt ist
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.UnknownRequestHeaderException.#ctor(System.String)">
            <summary>
            Exception, wenn der RequestHeader Name nicht bekannt ist
            </summary>
            <param name="requestHeaderName"> Name des RequestHeader</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.SmartHomeResponse">
            <summary>
            Klasse für Smart Home Responses
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.SmartHomeResponse.Header">
            <summary>
            Header Inhalt
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.SmartHomeResponse.Payload">
            <summary>
            Payload Inhalt
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.SmartHomeResponse.GetResponsePayloadType">
            <summary>
            Liefert den Typ des Payloads
            </summary>
            <returns>System.Type des Payloads</returns>
        </member>
        <member name="M:RKon.Alexa.NET.Response.SmartHomeResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader)">
            <summary>
            Legt eine SmartHomeResponse mit passendem Header und Payload mit Hilfe des requestHeaders an.
            </summary>
            <param name="requestHeader">Header des SmartHomeRequests</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.BridgeOfflineErrorResponse">
            <summary>
            Fehlermeldung, wenn das Gerät mit einem Hub oder einer Bridge verbunden ist, die offline ist.
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.BridgeOfflineErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen leeren Payload
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="header">Requestheader</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.DependentServiceUnavailableErrorResponse">
            <summary>
            Fehlermeldung wenn eine Dependency nicht erreichbar ist.
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.DependentServiceUnavailableErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader,System.String)">
            <summary>
            Konstruktor. Erstellt an Hand des Requestheaders den Header und den Payload mit dem Namen des Services, der nicht erreichbar ist.      
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="reqHeader">Requestheader</param>
            <param name="serviceName">Name des Services, der nicht erreichbar ist</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.DriverInternalErrorResponse">
            <summary>
            Generische Laufzeitfehlermeldung
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.DriverInternalErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen leeren Payload
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="header">Requestheader</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.UnvalidDiscoveryResponseException">
            <summary>
            Exception, wenn versucht wird eine ErrorResponse für ein DiscoverApplianceRequest zu verwenden.
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.UnvalidDiscoveryResponseException.#ctor">
            <summary>
            Konstruktor mit Exceptionmeldung.
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.ErrorResponse">
            <summary>
            Abstrakte Basisklasse für Fehlermeldungen auf SmartHomeRequests.
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ErrorResponses.ErrorResponse.Header">
            <summary>
            Header
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ErrorResponses.ErrorResponse.Payload">
            <summary>
            Payload
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.ErrorResponse.GetResponsePayloadType">
            <summary>
            Liefert den Typ des Payloads zurück
            </summary>
            <returns>System.Type des Payloads</returns>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.ErrorResponse.setHeader(RKon.Alexa.NET.Request.RequestHeader,System.String)">
            <summary>
            Setzt den Header an Hand des RequestHeaders und dem Namen des Fehlers
            </summary>
            <param name="reqHeader">RequestHeaders</param>
            <param name="errorName">Name des Fehlers</param>
            <returns></returns>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.ErrorResponse.throwExceptionOnDiscoveryRequest(System.String)">
            <summary>
            Schmeißt eine UnvalidDiscoveryResponseException, wenn versucht wird eine ErrorResponse für ein DiscoverApplianceRequest zu verwenden.
            </summary>
            <param name="reqHeaderName"></param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.ExspiredAccessTokenErrorResponse">
            <summary>
            Fehlermeldung wenn das übergebene Accesstoken abgelaufen ist.
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.ExspiredAccessTokenErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen leeren Payload
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="header">Requestheader</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.InvalidAccessTokenErrorResponse">
            <summary>
            Fehlermeldung wenn das übergebene Accesstoken ungültig ist.
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.InvalidAccessTokenErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen leeren Payload
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="header">Requestheader</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.NoSuchTargetErrorResponse">
            <summary>
            Fehlerresponse wenn das angegebene Gerät nicht gefunden wurde
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.NoSuchTargetErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen leeren Payload
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="header">Requestheader</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.NotSupportedInCurrentModeErrorResponse">
            <summary>
            Fehlermeldung, wenn das Gerät sich in einem Modus befindet, in der es sich nicht mit der Smart Home Skill API kontrollieren lässt
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.NotSupportedInCurrentModeErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader,System.String)">
            <summary>
            Konstruktor. currentDeviceMode muss einen validen Modus übergeben bekommen. Diese findet man unter RKon.Alexa.NET.Types.DeviceModes.Modes.
            Falls eine ungültige Eingabe getätigt wird, wird CurrentDeviceMode auf OTHER gesetzt.
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="reqHeader">Requestheader</param>
            <param name="currentDeviceMode">Aktiver Modus des Geräts</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.RateLimitExceededErrorResponse">
            <summary>
            Fehlermeldung, wenn das Requestlimit des Geräts überschritten ist
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.RateLimitExceededErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader,System.String,System.String)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen Payload mit Requestlimit und Zeiteinheit für das RequestLimit (HOUR,DAY oder MINUTE)
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="reqHeader">Requestheader</param>
            <param name="rateLimit">Requestlimit</param>
            <param name="timeUnit">Zeiteinheit für das Requestlimit</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.TargetBridgeConnectivityUnstableErrorResponse">
            <summary>
            Fehlermeldung wenn die Cloud Verbindung zu eine Hub oder einer Bridge, die das Gerät verbindet, nicht stabil ist
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.TargetBridgeConnectivityUnstableErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen leeren Payload
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="header">Requestheader</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.TargetBridgeFirmwareOutdatedErrorResponse">
            <summary>
            Fehlermeldung, wenn die Firmware des Hubs oder der Bridge, die das Geräts verbindet, veraltet ist
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.TargetBridgeFirmwareOutdatedErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader,System.String,System.String)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen Payload mit Minimum  und aktueller Firmwareversion
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="header">Requestheader</param>
            <param name="minimumFirmwareVersion">Minimale Firmwareversion</param>
            <param name="currentFirmwareVersion">Aktuelle Firmwareversion</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.TargetBridgeHardwareMalfunctionErrorResponse">
            <summary>
            Fehlermeldung, wenn der Hub oder die Bridge, die das Gerät verbindet, eine Hardwarefehlfunktion hat.
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.TargetBridgeHardwareMalfunctionErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen leeren Payload
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="header">Requestheader</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.TargetConnectivityUnstableErrorResponse">
            <summary>
            Fehlermeldung wenn die Cloud Verbindung zum Gerät nicht stabil ist
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.TargetConnectivityUnstableErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen leeren Payload
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="header">Requestheader</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.TargetFirmwareOutdatedErrorResponse">
            <summary>
            Fehlermeldung, wenn die Firmware des Geräts veraltet ist
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.TargetFirmwareOutdatedErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader,System.String,System.String)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen Payload mit Minimum  und aktueller Firmwareversion
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="reqHeader">Requestheader</param>
            <param name="minimumFirmwareVersion">Minimale Firmwareversion</param>
            <param name="currentFirmwareVersion">Aktuelle Firmwareversion</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.TargetHardwareMalfunctionErrorResponse">
            <summary>
            Fehlermeldung, wenn das Gerät eine Hardwarefehlfunktion hat.
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.TargetHardwareMalfunctionErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen leeren Payload
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="header">Requestheader</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.TargetOfflineErrorResponse">
            <summary>
            Fehlermeldung, wenn das Ziel offline ist
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.TargetOfflineErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen leeren Payload
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="header">Requestheader</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.UnexpectedInformationReceivedErrorResponse">
            <summary>
            Fehlermeldung, wenn die Request Nachricht oder der Payload nicht vom Skilladapter verarbeitet werden konnte.
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.UnexpectedInformationReceivedErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader,System.String)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen Payload mit dem Parameter, der nicht verwertbar war
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="reqHeader">Requestheader</param>
            <param name="faultingParameter">Parameter, der nicht verwertbar war</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.UnsuportedOperationErrorResponse">
            <summary>
            Fehlermeldung, wenn die angeforderte Operation von dem Gerät nicht unterstützt wird
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.UnsuportedOperationErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen leeren Payload
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="header">Requestheader</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.UnsupportedTargetErrorResponse">
            <summary>
            Fehlermeldung, wenn das angesprochene Gerät nicht vom Skill Adapter unterstützt wird.
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.UnsupportedTargetErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen leeren Payload
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="header">Requestheader</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.UnsupportedTargetSettingErrorResponse">
            <summary>
            Fehlermeldung, wenn die angeforderte Einstellung für das Gerät und die Operation ungültig ist.
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.UnsupportedTargetSettingErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen leeren Payload
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="header">Requestheader</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.UnwillingToSetValueErrorResponse">
            <summary>
            Fehlermeldung, wenn das Gerät den übergebenen Wert nicht setzen will
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.UnwillingToSetValueErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader,System.String,System.String)">
            <summary>
            Konstruktor erstellt Header an Hand vom Requestheader und einen Payload mit Fehlercode und Fehlerbeschreibung
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="reqHeader">Requestheader</param>
            <param name="errorInfoCode">Fehlercode</param>
            <param name="errorInfoDescription">Fehlerbeschreibung</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.ValueOutOfRangeErrorResponse">
            <summary>
            Fehlerantwort, wenn ein Request einen Wert einstellen will, der sich nicht in der vom Gerät akzeptierten Wertspanne befindet.
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.ValueOutOfRangeErrorResponse.#ctor(RKon.Alexa.NET.Request.RequestHeader,System.Double,System.Double)">
            <summary>
            Konstruktor. Setzt header an Hand des Requestheaders und Payload mit minimal und Maximalwert
            Schmeißt eine UnvalidDiscoveryResponseException, wenn diese Fehlerresponse auf ein DiscoverApplianceRequest antworten soll,
            da diese Requests nie eine ErrorResponse als Antwort bekommen.
            </summary>
            <param name="reqHeader">Requestheader</param>
            <param name="minimumValue">Minimalwert</param>
            <param name="maximumValue">Maximalwert</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.DependentServiceUnavailablePayload">
            <summary>
            Payload für DependentServiceUnavailable
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ErrorResponses.DependentServiceUnavailablePayload.DependentServiceName">
            <summary>
            Name des angeforderten Service
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.DependentServiceUnavailablePayload.#ctor(System.String)">
            <summary>
            Konstruktor. Setzt DependentServiceName
            </summary>
            <param name="serviceName"></param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.NotSupportedInCurrentModePayload">
            <summary>
            Payload für NotSupportedInCurrentMode
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ErrorResponses.NotSupportedInCurrentModePayload.CurrentDeviceMode">
            <summary>
            Aktiver Gerätemodus
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.NotSupportedInCurrentModePayload.#ctor(System.String)">
            <summary>
            Konstruktor. Setzt CurrentDeviceMode wenn möglich auf currenMode. Ansonsten auf OTHER
            </summary>
            <param name="currentMode"></param>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.NotSupportedInCurrentModePayload.TrySetDeviceMode(System.String)">
            <summary>
            Setzt CurrentDeviceMode wenn möglich auf mode. Ansonsten auf OTHER
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.RateLimitExceededPayload">
            <summary>
            Payload für RateLimitExceeded
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ErrorResponses.RateLimitExceededPayload.RateLimit">
            <summary>
            Maximale Anzahl von Requests, die ein Gerät akzeptiert
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ErrorResponses.RateLimitExceededPayload.TimeUnit">
            <summary>
            Zeiteinheit für das RateLimit in Großbuchstaben. Z.B MINUTE, HOUR oder DAY 
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.RateLimitExceededPayload.#ctor(System.String,System.String)">
            <summary>
            Konstruktor. Setzt RateLimit und TimeUnit
            </summary>
            <param name="rateLimit"></param>
            <param name="timeUnit"></param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.TargetFirmwareOutdatedPayload">
            <summary>
            Payload für TargetFirmwareOutdated
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ErrorResponses.TargetFirmwareOutdatedPayload.MinimumFirmwareVersion">
            <summary>
            Kleinste erlaubte Firmwareversion
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ErrorResponses.TargetFirmwareOutdatedPayload.CurrentFirmwareVersion">
            <summary>
            Aktuelle Firmwareversion des Geräts
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.TargetFirmwareOutdatedPayload.#ctor(System.String,System.String)">
            <summary>
            Konstruktor. Setzt minimum und current Firmware
            </summary>
            <param name="minimum"></param>
            <param name="current"></param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.UnexpectedInformationReceivedPayload">
            <summary>
            Payload für UnexpectedInformationReceived
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ErrorResponses.UnexpectedInformationReceivedPayload.FaultingParameter">
            <summary>
            Parameter der gescheitert ist
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.UnexpectedInformationReceivedPayload.#ctor(System.String)">
            <summary>
            Konstruktor. Setzt FaultingParameter
            </summary>
            <param name="faultingParameter"></param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.UnwillingToSetValuePayload">
            <summary>
            Payload für UnwillingToSetValue
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ErrorResponses.UnwillingToSetValuePayload.ErrorInfo">
            <summary>
            Fehlerinformationen
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.UnwillingToSetValuePayload.#ctor(System.String,System.String)">
            <summary>
            Konstruktor. Erstellt ErrorInfo Objekt aus Fehlercode und Fehlerbeschreibung
            </summary>
            <param name="code">Fehlercode</param>
            <param name="desc">Fehlerbeschreibung</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ErrorResponses.ValueOutOfRangePayload">
            <summary>
            Payload für ValueOutOfRange
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ErrorResponses.ValueOutOfRangePayload.MinimumValue">
            <summary>
            Minimalwert
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ErrorResponses.ValueOutOfRangePayload.MaximumValue">
            <summary>
            Maximalwert
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ErrorResponses.ValueOutOfRangePayload.#ctor(System.Double,System.Double)">
            <summary>
            Konstruktor. Setzt Minimal und Maximalwert
            </summary>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ResponseHeader">
            <summary>
            Klasse für den Header einer SmartHomeResponse
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ResponseHeader.MessageId">
            <summary>
            MessageId
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ResponseHeader.PayloadVersion">
            <summary>
            Version des Payloads
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ResponseHeader.Namespace">
            <summary>
            Namespace
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.ResponseHeader.Name">
            <summary>
            Aktionsname
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.ResponseHeader.#ctor(RKon.Alexa.NET.Request.RequestHeader)">
            <summary>
            Erstellt an Hand eines Requestheaders den ResponseHeader
            </summary>
            <param name="reqHeader">Requestheaders</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.DiscoverResponsePayload">
            <summary>
            Payload für eine DiscoverApplianceResponse
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.DiscoverResponsePayload.DiscoveredAppliances">
            <summary>
            Gefundene Geräte
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.DiscoverResponsePayload.#ctor">
            <summary>
            Konstruktor. Erstellt eine neue Liste gefundener Geräte
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Response.HealthCheckResponsePayload">
            <summary>
            Payload für eine HealthCheckResponse
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.HealthCheckResponsePayload.#ctor">
            <summary>
            Konstruktor setzt IsHealthy auf false und Description auf The system is currenty not healthy
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.HealthCheckResponsePayload.SetHealthyStatus(System.Boolean)">
            <summary>
            Setzt die Beschreibung und IsHealthy an Hand des übergebenen Zustands
            </summary>
            <param name="isHealthy">Zustand des Geräts</param>
        </member>
        <member name="T:RKon.Alexa.NET.Response.ResponsePayload">
            <summary>
            Leerer Responsepayload
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Response.TargetTemperatureResopnsePayload">
            <summary>
            Payload für TargetTemperatureResponse
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.TargetTemperatureResopnsePayload.TargetTemperature">
            <summary>
            Zieltemperatur
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.TargetTemperatureResopnsePayload.TemperatureMode">
            <summary>
            Temperaturmodus
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Response.TargetTemperatureResopnsePayload.PreviousState">
            <summary>
            Letzter Zustand
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Response.TargetTemperatureResopnsePayload.#ctor">
            <summary>
            Konstruktor. Initialisiert alle Properties.
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Types.ApplianceActions">
            <summary>
            Actions für Geräte
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.ApplianceActions.DECREMENT_PERCENTAGE">
            <summary>
            String für die Decrement Percentage Gerätefunktion
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.ApplianceActions.TURN_OFF">
            <summary>
            String für die Turn Off Gerätefunktion
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.ApplianceActions.TURN_ON">
            <summary>
            String für die Turn On Gerätefunktion
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.ApplianceActions.SET_TARGET_TEMPERATURE">
            <summary>
            String für die Set Target Temperature Gerätefunktion
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.ApplianceActions.SET_PERCENTAGE">
            <summary>
            String für die Set Percentage Gerätefunktion
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.ApplianceActions.INCREMENT_TARGET_TEMPERATURE">
            <summary>
            String für die Increment Target Temperature Gerätefunktion
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.ApplianceActions.INCREMENT_PERCENTAGE">
            <summary>
            String für die Increment Percentage Gerätefunktion
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.ApplianceActions.DECREMENT_TARGET_TEMPERATURE">
            <summary>
            String für die Decrement Target Temperature Gerätefunktion
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.ApplianceActions.Actions">
            <summary>
            Liste aller verfügbaren Aktionen
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Types.DeviceModes">
            <summary>
            Klasse für Gerätemodi
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.DeviceModes.AUTO">
            <summary>
            String für AUTO Mode
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.DeviceModes.HEAT">
            <summary>
            String für HEAT Mode
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.DeviceModes.COOL">
            <summary>
            String für COOL Mode
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.DeviceModes.AWAY">
            <summary>
            String für AWAY Mode
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.DeviceModes.OTHER">
            <summary>
            String für OTHER Mode
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.DeviceModes.Modes">
            <summary>
            Liste aller Gerätemodi
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.DeviceModes.TemperatureModes">
            <summary>
            Liste aller Temperaturmodi
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Types.HeaderNames">
            <summary>
            Smarthomerequest, -response, und -errorresponse Headernames
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.DISCOVERY_REQUEST">
            <summary>
            Header Name für DiscoverAppliance Requests.
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.HEALTH_CHECK_REQUEST">
            <summary>
            Header Name für HealthCheck Requests.
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.TURN_ON_REQUEST">
            <summary>
            Header Name für Turn On Requests.
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.TURN_OFF_REQUEST">
            <summary>
            Header Name für Turn Off Requests.
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.SET_TARGET_TEMPERATURE_REQUEST">
            <summary>
            Header Name für SetTargetTemperature Requests.
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.INCREMENT_TARGET_TEMPERATURE_REQUEST">
            <summary>
            Header Name für IncrementTargetTemperature Requests.
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.DECREMENT_TARGET_TEMPERATURE_REQUEST">
            <summary>
            Header Name für DecrementTargetTemperature Requests.
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.SET_PERCENTAGE_REQUEST">
            <summary>
            Header Name für SetPercentage Requests.
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.INCREMENT_PERCENTAGE_REQUEST">
            <summary>
            Header Name für IncrementPercentage Requests.
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.DECREMENT_PERCENTAGE_REQUEST">
            <summary>
            Header Name für DecrementPercentage Requests.
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.VALUE_OUT_OF_RANGE_ERROR">
            <summary>
            Error Header Name wenn der zu setzende Wert ausserhalb der unterstützen Spanne liegt
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.TARGET_OFFLINE_ERROR">
            <summary>
            Error Header Name wenn das angesprochene Gerät nicht erreichbar ist
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.BRIDGE_OFFLINE_ERROR">
            <summary>
            Error Header Name wenn die Bridge oder der Hub für das angesprochene Gerät nicht erreichbar ist
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.NO_SUCH_TARGET_ERROR">
            <summary>
            Error Header Name wenn das angesprochene Gerät nicht existiert
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.DRIVER_INTERNAL_ERROR">
            <summary>
            Error Header Name für generische Laufzeitfehler
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.DEPENDENT_SERVICE_UNAVAILABLE_ERROR">
            <summary>
            Error Header Name wenn ein benötigter Dienst nicht erreichbar ist
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.TARGET_CONNECTIVITY_UNSTABLE_ERROR">
            <summary>
            Error Header Name wenn die Verbindung zum angesprochenen Gerät nicht stabil ist
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.TARGET_BRIDGE_CONNECTIVITY_UNSTABLE_ERROR">
            <summary>
            Error Header Name wenn die Verbindung zur Bridge oder Hub des angesprochenen Geräts nicht stabil ist
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.TARGET_FIRMWARE_OUTDATED_ERROR">
            <summary>
            Error Header Name wenn die Firmware des angesprochenen Geräts nicht mehr aktuell ist
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.TARGET_BRIDGE_FIRMWARE_OUTDATED_ERROR">
            <summary>
            Error Header Name wenn die Firmware der Bridge oder des Hubs des angesprochenen Geräts nicht mehr aktuell ist
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.TARGET_HARDWARE_MALFUNCTION_ERROR">
            <summary>
            Error Header Name wenn das angesprochene Gerät eine Hardware Fehlfunktion hat
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.TARGET_BRIDGE_HARDWARE_MALFUNCTION_ERROR">
            <summary>
            Error Header Name wenn der Hub oder die Bridge des angesprochenen Geräts eine Hardware Fehlfunktion hat
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.UNWILLING_TO_SET_VALUE_ERROR">
            <summary>
            Error Header Name wenn das Gerät den Wert nicht setzt
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.RATE_LIMIT_EXCEEDED_ERROR">
            <summary>
            Error Header Name wenn das Requestlimit des Gerät erreicht wurde
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.NOT_SUPPORTED_IN_CURRENT_MODE_ERROR">
            <summary>
            Error Header Name wenn die Aktion im aktuellen Modus des Geräts nicht unterstützt wird
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.EXSPIRED_ACCESS_TOKEN_ERROR">
            <summary>
            Error Header Name wenn der übergebene Access Token abgelaufen ist
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.INVALID_ACCESS_TOKEN_ERROR">
            <summary>
            Error Header Name wenn der übergebene Access Token abgelaufen ist
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.UNSUPPORTED_TARGET_ERROR">
            <summary>
            Error Header Name wenn das Gerät nicht vom Skill Adapter unterstützt wird
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.UNSUPPORTED_OPERATION_ERROR">
            <summary>
            Error Header Name wenn die Aktion auf dem Gerät nicht unterstützt wird.
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.UNSUPPORTED_TARGET_SETTING_ERROR">
            <summary>
            Error Header Name wenn die Option vom Gerät oder der Aktion nicht unterstützt wird
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.UNEXCEPTED_INFORMATION_RECEIVED_ERROR">
            <summary>
            Error Header Name wenn ein Parameter einen nicht erwarteten Wert besitzt
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.HeaderNames.ResponseHeaderNames">
            <summary>
            KeyValuePairs von RequestHeaderNames(Key) und ResponseHeaderNames(Value).
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Types.Namespaces">
            <summary>
            Namespaces für Smarthomerequests,-responses und -errorresponses
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.Namespaces.DISCOVERY">
            <summary>
            Header Namespace für DiscoveryAppliance Requests und Responses 
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.Namespaces.CONTROL">
            <summary>
            Header Namespace für Geräte Requests und Responses
            </summary>
        </member>
        <member name="F:RKon.Alexa.NET.Types.Namespaces.SYSTEM">
            <summary>
            Header Namespace für HealthChecks
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Types.DeltaPercentage">
            <summary>
            Klasse für Delta Prozentwert
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Types.DeltaTemperature">
            <summary>
            Klasse für Delta Temperaturwert
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Types.ErrorInfo">
            <summary>
            Klasse für Fehlerinformationen
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Types.ErrorInfo.Code">
            <summary>
            Fehlercode
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Types.ErrorInfo.Description">
            <summary>
            Fehlerbeschreibung
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Types.ErrorInfo.#ctor(System.String,System.String)">
            <summary>
            Konstruktor.
            </summary>
            <param name="code">Fehlercode</param>
            <param name="description">Fehlerbeschreibung</param>
        </member>
        <member name="T:RKon.Alexa.NET.Types.PercentageState">
            <summary>
            Klasse für Prozentstatus
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Types.PreviousState">
            <summary>
            Klasse für letzten Temperaturstatus
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Types.PreviousState.TargetTemperature">
            <summary>
            Zieltemperatur
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Types.PreviousState.Mode">
            <summary>
            Temperaturmodus
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Types.PreviousState.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Types.TargetTemperature">
            <summary>
            Klasse für Temperaturwert
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Types.TargetTemperature.Value">
            <summary>
            Wert
            </summary>
        </member>
        <member name="T:RKon.Alexa.NET.Types.TemperatureMode">
            <summary>
            Klasse für Temperatur Modus
            </summary>
        </member>
        <member name="P:RKon.Alexa.NET.Types.TemperatureMode.Value">
            <summary>
            Wert
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Types.TemperatureMode.#ctor">
            <summary>
            Konsturktor setzt Wert auf AUTO
            </summary>
        </member>
        <member name="M:RKon.Alexa.NET.Types.TemperatureMode.TrySetTemperatureMode(System.String)">
            <summary>
            Setzt den Wert auf mode wenn möglich. Gültige Eingaben finden Sie im Namespace RKon.Alexa.Net.Types.DeviceModes
            Bei Fehlschlag wird AUTO eingestellt
            </summary>
            <param name="mode">Einzustellender Modus</param>
            <returns>True bei Wertänderung</returns>
        </member>
    </members>
</doc>
